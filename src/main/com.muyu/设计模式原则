单一职责原则：
    一个类只负责一个功能领域的职责
    注意细节：
        降低类的复杂度，一个类只负责一项职责
        提高可读性，可维护性
        降低变更引起的风险
开闭原则
    软件对象（类、模块、方法等）应该对于扩展是开放的，对修改是关闭的
迪米特法则
    当前对象本身、当前对象的成员对象、当前对象所创建的对象、当前对象的方法参数等，这些对象存在关联、聚合或组合关系，可以直接访问这些对象的方法。
里氏替换原则
    子类应当可以替换父类并出现在父类能够出现的地方
依赖倒转原则
    针对接口编程，抽象不依赖于细节，细节应依赖于抽象
接口隔离原则
    将总接口拆分成多个接口，减少不必要的代码
    理解：
        一个接口中有添删改查4个方法，实现类只要实现一个添加的功能
        却要实现添删改查4个方法，代码会很冗余，将接口独立出来。
最少知道原则
    一个对象应该对其他对象保持最少的了解。
合成复用原则
    它要求在软件复用时，要尽量先使用组合或者聚合等关联关系来实现，其次才考虑使用继承关系来实现